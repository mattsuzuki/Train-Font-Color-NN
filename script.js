const net = new brain.NeuralNetwork();

const data = [
  { input: { r: 0, g: 0, b: 0 }, output: [1] },
  { input: { r: 1, g: 1, b: 1 }, output: [0] },
  {
    input: {
      r: 0.770988737000817,
      g: 0.8546115741136788,
      b: 0.04124654321546273,
    },
    output: [0],
  },
  {
    input: {
      r: 0.7832681056113042,
      g: 0.2918188016622183,
      b: 0.5997203717559365,
    },
    output: [1],
  },
  {
    input: {
      r: 0.8533099932847856,
      g: 0.6759667317269744,
      b: 0.09097699830612238,
    },
    output: [1],
  },
  {
    input: {
      r: 0.8386059314523129,
      g: 0.3191518263614339,
      b: 0.7354409971022737,
    },
    output: [1],
  },
  {
    input: {
      r: 0.3593581570469333,
      g: 0.6066562519237675,
      b: 0.16364954847034752,
    },
    output: [1],
  },
  {
    input: {
      r: 0.7985995406495514,
      g: 0.7529804880447102,
      b: 0.42935793164394975,
    },
    output: [1],
  },
  {
    input: {
      r: 0.969464580076765,
      g: 0.26824662901201934,
      b: 0.366339550028276,
    },
    output: [1],
  },
  {
    input: {
      r: 0.7420738509884155,
      g: 0.4479010787785398,
      b: 0.48065348917831363,
    },
    output: [1],
  },
  {
    input: {
      r: 0.35047105705190607,
      g: 0.22115768220414145,
      b: 0.6226122371263183,
    },
    output: [1],
  },
  {
    input: {
      r: 0.19975418823933366,
      g: 0.965722245850545,
      b: 0.48926755476399,
    },
    output: [0],
  },
  {
    input: {
      r: 0.4457405770180647,
      g: 0.7213340662236785,
      b: 0.49957522252424624,
    },
    output: [1],
  },
  {
    input: {
      r: 0.40577419133798975,
      g: 0.14633515358363725,
      b: 0.5739879386493942,
    },
    output: [1],
  },
  {
    input: {
      r: 0.14048309085784938,
      g: 0.6139904466259505,
      b: 0.8432287466807857,
    },
    output: [1],
  },
  {
    input: {
      r: 0.31552578239238427,
      g: 0.5072599680862839,
      b: 0.5905363886568729,
    },
    output: [0],
  },
  {
    input: {
      r: 0.9141831383772265,
      g: 0.7295379377469708,
      b: 0.8121662881150158,
    },
    output: [0],
  },
  {
    input: {
      r: 0.9086533653503797,
      g: 0.3633749582437249,
      b: 0.6322020386796872,
    },
    output: [1],
  },
  {
    input: {
      r: 0.5318302460793991,
      g: 0.8809057215455989,
      b: 0.8362613616918886,
    },
    output: [0],
  },
  {
    input: {
      r: 0.7254476016983349,
      g: 0.7159288939528505,
      b: 0.17879201621080454,
    },
    output: [0],
  },
  {
    input: {
      r: 0.7027108862073199,
      g: 0.43826555371180786,
      b: 0.4794040589707651,
    },
    output: [1],
  },
  {
    input: {
      r: 0.07422889467987481,
      g: 0.4209140550731376,
      b: 0.6576118248498226,
    },
    output: [1],
  },
  {
    input: {
      r: 0.37443359022058664,
      g: 0.9767873350303469,
      b: 0.41972384539083696,
    },
    output: [0],
  },
  {
    input: {
      r: 0.5349165320180522,
      g: 0.394963565572505,
      b: 0.3420223865590417,
    },
    output: [1],
  },
  {
    input: {
      r: 0.5562877342933088,
      g: 0.5550748519582842,
      b: 0.4414578012417476,
    },
    output: [1],
  },
  {
    input: {
      r: 0.23972973333104863,
      g: 0.44384255900878045,
      b: 0.8890097957760534,
    },
    output: [1],
  },
  {
    input: {
      r: 0.11907584054647913,
      g: 0.7288291787137255,
      b: 0.9377925791708561,
    },
    output: [0],
  },
  {
    input: {
      r: 0.6032154340861593,
      g: 0.7080021944146584,
      b: 0.1850630045877295,
    },
    output: [0],
  },
  {
    input: {
      r: 0.18987735117192828,
      g: 0.20099045921157432,
      b: 0.8154994040583099,
    },
    output: [1],
  },
  {
    input: {
      r: 0.27717967576929925,
      g: 0.14934881778455988,
      b: 0.7019243033136737,
    },
    output: [1],
  },
  {
    input: {
      r: 0.12868853913647094,
      g: 0.28594098726865136,
      b: 0.7930767102042282,
    },
    output: [1],
  },
  {
    input: {
      r: 0.6911207674301474,
      g: 0.9277071461916919,
      b: 0.5467585131610666,
    },
    output: [0],
  },
  {
    input: {
      r: 0.6583246951953361,
      g: 0.09491422549029815,
      b: 0.32841216253508954,
    },
    output: [1],
  },
  {
    input: {
      r: 0.3854347478663005,
      g: 0.26438866358167523,
      b: 0.3118483344159839,
    },
    output: [1],
  },
  {
    input: {
      r: 0.12053192529239265,
      g: 0.8110821985998857,
      b: 0.6255049041233565,
    },
    output: [0],
  },
  {
    input: {
      r: 0.8661045665998253,
      g: 0.067652156943109,
      b: 0.5257412542091326,
    },
    output: [1],
  },
  {
    input: {
      r: 0.43570136665408987,
      g: 0.2657982917003967,
      b: 0.1652511366641496,
    },
    output: [1],
  },
  {
    input: {
      r: 0.8277983356603971,
      g: 0.5613529039908332,
      b: 0.9685223902042621,
    },
    output: [1],
  },
  {
    input: {
      r: 0.686146836674496,
      g: 0.3356194560133252,
      b: 0.7058588634230183,
    },
    output: [1],
  },
  {
    input: {
      r: 0.773185270240065,
      g: 0.5061142373830994,
      b: 0.7476159311411852,
    },
    output: [0],
  },
  {
    input: {
      r: 0.30098658240985987,
      g: 0.9119166262054392,
      b: 0.4191845428173713,
    },
    output: [0],
  },
];

net.train(data);

const colorEl = document.getElementById("color");
const guessEl = document.getElementById("guess");
const whiteButton = document.getElementById("white-button");
const blackButton = document.getElementById("black-button");
const printButton = document.getElementById("print-button");
let color;
setRandomColor();

whiteButton.addEventListener("click", () => {
  chooseColor(1);
});

blackButton.addEventListener("click", () => {
  chooseColor(0);
});

printButton.addEventListener("click", print);

function chooseColor(value) {
  data.push({
    input: color,
    output: [value],
  });
  setRandomColor();
}

function print() {
  console.log(JSON.stringify(data));
}

function setRandomColor() {
  color = {
    r: Math.random(),
    g: Math.random(),
    b: Math.random(),
  };
  const guess = net.run(color)[0];
  guessEl.style.color = guess > 0.5 ? `#FFF` : `#000`;
  colorEl.style.backgroundColor = `rgba(${color.r * 255}, ${color.g * 255},${
    color.b * 255
  })`;
}
